using System;
using System.Collections.Generic;
using System.Text;

namespace BenchmarkApp
{

	[Flags]
	public enum Enum32
	{
		None = 0,   // 0		
		Value1 = 1,
		Value2 = 1 << 1,   // 2 2
		Value3 = 1 << 2,   // 4 4
		Value4 = 1 << 3,   // 8 8
		Value5 = 1 << 4,   // 16 10
		Value6 = 1 << 5,   // 32 20
		Value7 = 1 << 6,   // 64 40
		Value8 = 1 << 7,   // 128 80
		Value9 = 1 << 8,   // 256 100
		Value10 = 1 << 9,  // 512 200
		Value11 = 1 << 10, // 1024 400
		Value12 = 1 << 11, // 2048 800
		Value13 = 1 << 12, // 4096 1000
		Value14 = 1 << 13, // 8192 2000
		Value15 = 1 << 14, // 16384 4000
		Value16 = 1 << 15, // 32768 8000
		Value17 = 1 << 16, // 65536 10000
		Value18 = 1 << 17, // 131072 20000
		Value19 = 1 << 18, // 262144 40000
		Value20 = 1 << 19, // 524288 	80000
		Value21 = 1 << 20, // 1048576 	100000
		Value22 = 1 << 21, // 2097152 	200000
		Value23 = 1 << 22, // 4194304 	400000
		Value24 = 1 << 23, // 8388608 	800000
		Value25 = 1 << 24, // 16777216 	1000000
		Value26 = 1 << 25, // 33554432 	2000000
		Value27 = 1 << 26, // 67108864 	4000000
		Value28 = 1 << 27, // 134217728 	8000000
		Value29 = 1 << 28, // 268435456 	10000000
		Value30 = 1 << 29, // 536870912  20000000
		Value31 = 1 << 30, // 1073741824	40000000	
	}

    [Flags]
    public enum Enum64 : long
	{
		None = 0, // 0
		Value1 = 1L, // 1 
		Value2 = 1L << 1, // 2 
		Value3 = 1L << 2, // 4 
		Value4 = 1L << 3, // 8 
		Value5 = 1L << 4, // 16 
		Value6 = 1L << 5, // 32 
		Value7 = 1L << 6, // 64 
		Value8 = 1L << 7, // 128 
		Value9 = 1L << 8, // 256 
		Value10 = 1L << 9, // 512 
		Value11 = 1L << 10, // 1024 
		Value12 = 1L << 11, // 2048 
		Value13 = 1L << 12, // 4096 
		Value14 = 1L << 13, // 8192 
		Value15 = 1L << 14, // 16384 
		Value16 = 1L << 15, // 32768 
		Value17 = 1L << 16, // 65536 
		Value18 = 1L << 17, // 131072 
		Value19 = 1L << 18, // 262144 
		Value20 = 1L << 19, // 524288 
		Value21 = 1L << 20, // 1048576 
		Value22 = 1L << 21, // 2097152 
		Value23 = 1L << 22, // 4194304 
		Value24 = 1L << 23, // 8388608 
		Value25 = 1L << 24, // 16777216 
		Value26 = 1L << 25, // 33554432 
		Value27 = 1L << 26, // 67108864 
		Value28 = 1L << 27, // 134217728 
		Value29 = 1L << 28, // 268435456 
		Value30 = 1L << 29, // 536870912 
		Value31 = 1L << 30, // 1073741824 
		Value32 = 1L << 31, // 2147483648 
		Value33 = 1L << 32, // 4294967296 
		Value34 = 1L << 33, // 8589934592 
		Value35 = 1L << 34, // 17179869184 
		Value36 = 1L << 35, // 34359738368 
		Value37 = 1L << 36, // 68719476736 
		Value38 = 1L << 37, // 137438953472 
		Value39 = 1L << 38, // 274877906944 
		Value40 = 1L << 39, // 549755813888 
		Value41 = 1L << 40, // 1099511627776 
		Value42 = 1L << 41, // 2199023255552 
		Value43 = 1L << 42, // 4398046511104 
		Value44 = 1L << 43, // 8796093022208 
		Value45 = 1L << 44, // 17592186044416 
		Value46 = 1L << 45, // 35184372088832 
		Value47 = 1L << 46, // 70368744177664 
		Value48 = 1L << 47, // 140737488355328 
		Value49 = 1L << 48, // 281474976710656 
		Value50 = 1L << 49, // 562949953421312 
		Value51 = 1L << 50, // 1125899906842624 
		Value52 = 1L << 51, // 2251799813685248 
		Value53 = 1L << 52, // 4503599627370496 
		Value54 = 1L << 53, // 9007199254740992 
		Value55 = 1L << 54, // 18014398509481984 
		Value56 = 1L << 55, // 36028797018963968 
		Value57 = 1L << 56, // 72057594037927936 
		Value58 = 1L << 57, // 144115188075855872 
		Value59 = 1L << 58, // 288230376151711744 
		Value60 = 1L << 59, // 576460752303423488 
		Value61 = 1L << 60, // 1152921504606846976 
		Value6162 = Value61 | Value62,
		Value62 = 1L << 61, // 2305843009213693952 
		Value63 = 1L << 62, // 4611686018427387904  
	}
}
